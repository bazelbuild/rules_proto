"Bazel dependencies"

module(
    name = "rules_proto",
    # Note: the publish-to-BCR app will patch this line to stamp the version being published.
    version = "0.0.0",
    compatibility_level = 1,
)

bazel_dep(name = "rules_license", version = "0.0.7")
bazel_dep(name = "bazel_skylib", version = "1.3.0")
bazel_dep(name = "bazel_features", version = "1.2.0")
bazel_dep(name = "platforms", version = "0.0.8")

# FIXME: this should not be needed.
# Something seems wrong with toolchain registration otherwise.
# ERROR: com.google.devtools.build.lib.packages.BuildFileNotFoundException:
# no such package '@@[unknown repo 'rules_python' requested from @@rules_proto~override]//python/proto':
# The repository '@@[unknown repo 'rules_python' requested from @@rules_proto~override]' could not be resolved:
# No repository visible as '@rules_python' from repository '@@rules_proto~override'
bazel_dep(name = "rules_python", version = "0.31.0")

# Dependencies needed in tests
bazel_dep(name = "stardoc", version = "0.5.6", dev_dependency = True, repo_name = "io_bazel_stardoc")
bazel_dep(name = "rules_cc", version = "0.0.1", dev_dependency = True)
bazel_dep(name = "googletest", version = "1.11.0", dev_dependency = True, repo_name = "com_google_googletest")
bazel_dep(name = "protobuf", version = "23.1", dev_dependency = True, repo_name = "com_google_protobuf")

proto = use_extension("//proto:extensions.bzl", "proto")
proto.protoc(version = "v25.3")
use_repo(proto, "rules_proto_protoc")

register_toolchains("@rules_proto_protoc//:all")
